{"version":3,"sources":["src/ajax-form.ts"],"names":[],"mappings":"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","file":"ajax-form.1f0e2a5f.js","sourceRoot":"..","sourcesContent":["\ntype FormData = {\n    [id:string]:string\n}\n\n// @see\n// https://dev.to/aspittel/building-web-components-with-vanilla-javascript--jho\n// https://www.codementor.io/ayushgupta/vanilla-js-web-components-chguq8goz\nexport class AjaxFormElement extends HTMLElement {\n\n    private _form?:HTMLFormElement\n\n    constructor() {\n        super()\n\n        //this.attachShadow( { mode: 'open'} )\n        //this.shadowRoot?.appendChild( this.template.content.cloneNode(true) )\n    }\n\n    private _serializeFormToJson():FormData|null {\n        if( !this._form ) {\n            return null\n        }\n\n        let result:FormData = {}\n        this._form.childNodes.forEach( node => {\n\n            if( node.nodeType === this.ELEMENT_NODE && node.nodeName === 'INPUT' ) {\n\n                const input = node as HTMLInputElement\n\n                if( input.id.length > 0 ) {\n                    result[input.id] = input.value\n                }\n            } \n        })\n\n        return result\n\n    }\n\n    private _submit( event:Event ) {\n        if (event) {\n            event.preventDefault();\n        }\n\n        console.log( event )\n\n        \n        if( this._form ) {\n\n            const data = this._serializeFormToJson()\n            \n            console.dir( data )\n\n            fetch( this._form.action, {\n                    method: 'POST', // *GET, POST, PUT, DELETE, etc.\n                    mode: 'cors', // no-cors, *cors, same-origin\n                    //cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n                    //credentials: 'same-origin', // include, *same-origin, omit\n                    headers: {\n                    'Content-Type': 'application/json'\n                    },\n                    //redirect: 'follow', // manual, *follow, error\n                    referrerPolicy: 'no-referrer', // no-referrer, *client\n                    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n                })\n                .then( res => {\n                    console.dir( res )\n                })\n                .catch( err => {\n                    console.error( err )\n                })\n\n        }\n        \n\n    }\n\n    private _reset( event:Event ) {\n        if (event) {\n            event.preventDefault();\n          }\n\n          console.log( event )\n      \n    }\n    private _init() {\n        if( this._form ) {\n            console.log( 'init' )\n            this._form.addEventListener('submit',  ev => this._submit(ev) )\n            this._form.addEventListener('reset', ev => this._reset(ev) )\n        }\n    }\n\n    connectedCallback () {\n\n        const observer = new MutationObserver( (mutations) => {\n            const result = mutations.find( record => record.addedNodes[0].nodeName === 'FORM' )\n            if( result ) {\n                this._form = result.addedNodes[0] as HTMLFormElement\n                this._init()\n            }  \n            observer.disconnect()        \n        });\n\n        observer.observe( this , { childList:true } )\n\n      }\n\n    get template():HTMLTemplateElement {\n        const template = document.createElement('template');\n\n        template.innerHTML = `\n          <slot></slot>\n        `;\n\n        return template\n    } \n}\n\ntry {\n\n    customElements.define('ajax-form', AjaxFormElement);\n\n} catch (err) {\n    console.error( err );\n}"]}