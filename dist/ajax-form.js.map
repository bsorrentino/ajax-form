{"version":3,"sources":["ajax-form.ts"],"names":[],"mappings":"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","file":"ajax-form.js","sourceRoot":"../src","sourcesContent":["\ntype FormData = {\n    [id:string]:string\n}\n\n// @see\n// https://dev.to/aspittel/building-web-components-with-vanilla-javascript--jho\n\nexport class AjaxFormElement extends HTMLElement {\n\n    get bubbles():boolean {   \n        return Boolean(JSON.parse(this.getAttribute('event-bubbles') || 'true'))\n    }\n\n    set bubbles( value:boolean ) {\n        this.setAttribute( 'event-bubbles', String(value) );\n    }\n\n\n    static get observedAttributes() {\n        return ['event-bubbles'];\n    }\n\n    attributeChangedCallback(name:string, oldValue:string, newValue:string) { \n\n        console.log( name, oldValue, newValue)\n    }\n\n    /*\n    get method():string {   \n        return this.getAttribute('method') || 'POST';\n    }\n\n    set method( value:string ) {\n        this.setAttribute( 'method', value );\n    }\n\n    get mode():string {   \n        return this.getAttribute('onError') || 'cors';\n    }\n\n    set mode( value:string ) {\n        this.setAttribute( 'mode', value );\n    }\n\n    */\n\n    private _form?:HTMLFormElement\n\n    constructor() {\n        super()\n\n        //this.attachShadow( { mode: 'open'} )\n        //this.shadowRoot?.appendChild( this.template.content.cloneNode(true) )\n\n    }\n\n    private _serializeFormToJson():FormData|null {\n        if( !this._form ) {\n            return null\n        }\n\n        let result:FormData = {}\n        \n        const iterateElem = ( node:ChildNode ) => {\n\n            //console.log( node.nodeName )\n            if( node.nodeType === this.ELEMENT_NODE ) {\n\n                if (node.nodeName === 'INPUT'|| node.nodeName === 'SELECT') {\n\n                    const input = node as HTMLSelectElement|HTMLInputElement\n                    \n                    //console.log( \"selected\", input.name )\n                    if( input.name.length > 0 ) {\n                        result[input.name] = input.value\n                    }\n                }\n                else {\n                    node.childNodes.forEach( iterateElem )\n                }\n            } \n\n        }\n\n        this._form.childNodes.forEach( iterateElem )\n\n        return result\n\n    }\n\n    private _fire( event:string, data:any ) {\n        const b = this.bubbles\n        console.log( b )\n        this.dispatchEvent(new CustomEvent(event , { bubbles: b, detail: data} ));\n    }\n\n    public submit() {\n        if( !this._form ) {\n            return\n        }\n\n        const valid = this._form.reportValidity()\n        console.log( 'valid', valid )\n        if( valid ) {\n            this._onSubmit()\n        }\n\n    }\n    private _onSubmit( event?:Event ) {\n        if( !this._form ) {\n            return\n        }\n\n        //console.log( event )\n        if (event) {\n            event.preventDefault();\n        }\n\n        \n        const data = this._serializeFormToJson()   \n        //console.dir( data )\n\n        try  {\n            fetch( this._form.action, {\n                method: 'POST', // *GET, POST, PUT, DELETE, etc.\n                //mode: 'cors', // no-cors, *cors, same-origin\n                //cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n                //credentials: 'same-origin', // include, *same-origin, omit\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                //redirect: 'follow', // manual, *follow, error\n                referrerPolicy: 'no-referrer', // no-referrer, *client\n                body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n            })\n            .then( res =>  this._fire( 'ajax-form.result', res ))\n            .catch( err => this._fire( 'ajax-form.error', err ))\n\n        }\n        catch( err ) {\n            this._fire( 'ajax-form.error', err  );\n        }\n\n    }\n\n    public reset( event?:Event ) {\n        if (event) {\n            event.preventDefault();\n          }\n\n          console.log( event )\n          if( this._form ) {\n              this._form.reset()\n          }\n      \n    }\n    private _init() {\n        if( this._form ) {\n            console.log( 'init' )\n            this._form.addEventListener('submit',  ev => this._onSubmit(ev) )\n            this._form.addEventListener('reset', ev => this.reset(ev) )\n        }\n    }\n\n    connectedCallback () {\n\n        const observer = new MutationObserver( (mutations) => {\n            const result = mutations.find( record => record.addedNodes[0].nodeName === 'FORM' )\n            if( result ) {\n                this._form = result.addedNodes[0] as HTMLFormElement\n                this._init()\n            }  \n            observer.disconnect()        \n        });\n\n        observer.observe( this , { childList:true } )\n\n      }\n\n    get template():HTMLTemplateElement {\n        const template = document.createElement('template');\n\n        template.innerHTML = `\n          <slot></slot>\n        `;\n\n        return template\n    } \n}\n\ntry {\n\n    customElements.define('ajax-form', AjaxFormElement);\n\n} catch (err) {\n    console.dir( err );\n}"]}