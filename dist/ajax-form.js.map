{"version":3,"sources":["ajax-form.ts"],"names":[],"mappings":"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","file":"ajax-form.js","sourceRoot":"../src","sourcesContent":["\ntype FormData = {\n    [id:string]:string\n}\n\n// @see\n// https://dev.to/aspittel/building-web-components-with-vanilla-javascript--jho\n\nexport class AjaxFormElement extends HTMLElement {\n\n    /*\n    static get observedAttributes() {\n        return ['method', 'mode'];\n    }\n    \n    get method():string {   \n        return this.getAttribute('method') || 'POST';\n    }\n\n    set method( value:string ) {\n        this.setAttribute( 'method', value );\n    }\n\n    get mode():string {   \n        return this.getAttribute('onError') || 'cors';\n    }\n\n    set mode( value:string ) {\n        this.setAttribute( 'mode', value );\n    }\n\n    attributeChangedCallback(name:string, oldValue:string, newValue:string) { \n\n        console.log( name, oldValue, newValue)\n    }\n    */\n\n    private _form?:HTMLFormElement\n\n    constructor() {\n        super()\n\n        //this.attachShadow( { mode: 'open'} )\n        //this.shadowRoot?.appendChild( this.template.content.cloneNode(true) )\n\n    }\n\n    private _serializeFormToJson():FormData|null {\n        if( !this._form ) {\n            return null\n        }\n\n        let result:FormData = {}\n        this._form.childNodes.forEach( node => {\n\n            if( node.nodeType === this.ELEMENT_NODE && node.nodeName === 'INPUT' ) {\n\n                const input = node as HTMLInputElement\n\n                if( input.id.length > 0 ) {\n                    result[input.id] = input.value\n                }\n            } \n        })\n\n        return result\n\n    }\n\n    private _fire( event:string, data:any, bubbles = true ) {\n        this.dispatchEvent(new CustomEvent(event , {bubbles: bubbles, detail: data} ));\n    }\n\n    public submit( event?:Event ) {\n        if (event) {\n            event.preventDefault();\n        }\n\n        console.log( event )\n\n        \n        if( this._form ) {\n\n            const data = this._serializeFormToJson()\n            \n            //console.dir( data )\n\n            try  {\n                fetch( this._form.action, {\n                    method: 'POST', // *GET, POST, PUT, DELETE, etc.\n                    //mode: 'cors', // no-cors, *cors, same-origin\n                    //cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n                    //credentials: 'same-origin', // include, *same-origin, omit\n                    headers: {\n                    'Content-Type': 'application/json'\n                    },\n                    //redirect: 'follow', // manual, *follow, error\n                    referrerPolicy: 'no-referrer', // no-referrer, *client\n                    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n                })\n                .then( res => Promise.all( [res.text(), Promise.resolve(res)] ) )\n                .then( ([ text, res] ) =>  this._fire(  (!res.ok) ? 'ajax-form.error' : 'ajax-form.success', { message:() => text===''?res.statusText:text, res:res } ))\n                .catch( err => this._fire( 'ajax-form.error', { message: () => err.message, err:err } ))\n\n            }\n            catch( err ) {\n                this._fire( 'ajax-form.error',  { message: () => err.message, err:err }  );\n            }\n\n        }\n        \n        return false\n\n    }\n\n    public reset( event?:Event ) {\n        if (event) {\n            event.preventDefault();\n          }\n\n          console.log( event )\n          if( this._form ) {\n              this._form.reset()\n          }\n      \n    }\n    private _init() {\n        if( this._form ) {\n            console.log( 'init' )\n            this._form.addEventListener('submit',  ev => this.submit(ev) )\n            this._form.addEventListener('reset', ev => this.reset(ev) )\n        }\n    }\n\n    connectedCallback () {\n\n        const observer = new MutationObserver( (mutations) => {\n            const result = mutations.find( record => record.addedNodes[0].nodeName === 'FORM' )\n            if( result ) {\n                this._form = result.addedNodes[0] as HTMLFormElement\n                this._init()\n            }  \n            observer.disconnect()        \n        });\n\n        observer.observe( this , { childList:true } )\n\n      }\n\n    get template():HTMLTemplateElement {\n        const template = document.createElement('template');\n\n        template.innerHTML = `\n          <slot></slot>\n        `;\n\n        return template\n    } \n}\n\ntry {\n\n    customElements.define('ajax-form', AjaxFormElement);\n\n} catch (err) {\n    console.dir( err );\n}"]}